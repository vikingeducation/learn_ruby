x = 327644



def three_digit_splitter


y = x.to_s.split("")

a = y.length - 1


noob = []
temp = ""


a.downto(0) do |i| 
	
	temp.prepend(y[i]) 
	
	if (temp.size == 3) || (i == 0)
		noob.unshift(temp.to_i)
		temp = ""
	end
	
		
end

p noob




~!~~~~


  SUB_TEN = {1=>"one", 2=>"two", 3=>"three", 4=>"four", 5=>"five", 6=>"six", 7=>"seven", 8=>"eight", 9=>"nine"}
  SUB_TWENTY = {11=>"eleven", 12=>"twelve", 13=>"thirteen", 14=>"fourteen", 15=>"fifteen", 16=>"sixteen", 17=>"seventeen", 18=>"eighteen", 19=>"nineteen"}
  TENS = {10=>"ten", 20=>"twenty", 30=>"thirty", 40=>"forty", 50=>"fifty", 60=>"sixty", 70=>"seventy", 80=>"eighty", 90=>"ninety"}
  
  DIGITS = SUB_TEN.merge(SUB_TWENTY).merge(TENS) 
  
  
  
  
  
  
  
 
 def three_places(n)
    
    ans = []
    
    a, b = n.divmod(100)
    ans << DIGITS[a]
    # ans << 'hundred'
      
    if DIGITS[b]
      ans << DIGITS[b]
    else
      tens, ones = b.divmod(10)
      tens *= 10  
    
      ans << DIGITS[tens]
      ans << DIGITS[ones]
    end
  
    ans.compact!
    # puts ans.inspect
    ans.join(" ")
    
  end
    
w = ["1", "327", "000"]    
w.each { |i| p three_places(i.to_i) }